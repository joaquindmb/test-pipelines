{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactorytest-jdmb"
		},
		"AzureDataLakeStorageGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageGen2'"
		},
		"AzureFunction1_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction1'"
		},
		"Connecttofunction_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'Connecttofunction'"
		},
		"connecttosql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'connecttosql'"
		},
		"connecttosql_ams_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'connecttosql_ams'"
		},
		"DS_FileReference_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().sFileName"
		},
		"DS_FileReference_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().sFolderName"
		},
		"DataLake_ListFiles_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"DataLake_ListFiles_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "FromsFTP"
		},
		"PR_Dim_Course_Type_Source_Lake_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().NameFile"
		},
		"PR_Dim_Course_Type_Source_Lake_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat(dataset().RaizRuta,'/FromsFTP')"
		},
		"PR_Fact_Staff_Source_Lake_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().NameFile"
		},
		"PR_Fact_Staff_Source_Lake_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "FromsFTP"
		},
		"ds_NEWAMS_Source_Lake_old_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().FileName"
		},
		"ds_NEWAMS_Source_Lake_old_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('FromsFTP')"
		},
		"ds_TEST_Source_Lake_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().FileName"
		},
		"ds_TEST_Source_Lake_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('FromsFTP')"
		},
		"ds_biinsite_SourceLake_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().pFileName"
		},
		"ds_biinsite_SourceLake_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "FromsFTP"
		},
		"AzureDataLakeStorageGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jdbmdatalakegen2.dfs.core.windows.net"
		},
		"OData1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://services.odata.org/V3/Northwind/Northwind.svc"
		},
		"connecttodatalake_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://pruebaspipelines.azuredatalakestore.net/webhdfs/v1"
		},
		"connecttodatalake_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "cf36141c-ddd7-45a7-b073-111f66d0b30c"
		},
		"connecttodatalake_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "af366761-7221-4663-a2ea-a9919ab7f12f"
		},
		"connecttodatalake_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "test-jdmb"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/af366761-7221-4663-a2ea-a9919ab7f12f/resourceGroups/test-jdmb/providers/Microsoft.Storage/storageAccounts/jdbmdatalakegen2"
		},
		"ds_NEWAMS_Source_Lake_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().FileName"
		},
		"ds_NEWAMS_Source_Lake_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('FromsFTP')"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary2')]",
				"[concat(variables('factoryId'), '/datasets/Binary3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_LoadFile_PR_Dim_Course_Type')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Inicio PR_Dim_Course_Type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Inicio Pipeline",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "100",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Fin KO PR_Dim_Course_Type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File To Failed Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline KO",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "0",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get NameFile PR_Dim_Course_Type",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Log Inicio PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataLake_ListFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Log Fin OK PR_Dim_Course_Type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline OK",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach PR_Dim_Course_Type",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter PR_Dim_Course_Type').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check FileName Already PR_Dim_Course_Type",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set FileName PR_Dim_Course_Type",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINE_FILE_LOG_INSERT]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@variables('vFileNameCurrent')",
														"type": "Expression"
													}
												},
												"Proc": {
													"type": "String",
													"value": {
														"value": "@variables('vLog_PROCNAME')",
														"type": "Expression"
													}
												},
												"ID_PIPELINE": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "SQLCheck_FileName",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set FileName PR_Dim_Course_Type",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFileNameCurrent",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_File_ToSQL PR_Dim_Course_Type",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Check FileName Already PR_Dim_Course_Type",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Check FileName Already PR_Dim_Course_Type').output.firstRow.Result",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "LOG File Alredy Processed PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Move File To Processed File Alredy Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fichero ya procesado: ', variables('vFileNameCurrent'),', Se mueve a la carpeta Processed')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "300",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Move File To Processed File Alredy Processed",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": {
															"value": "@concat(pipeline().parameters.pRaizRuta,'/FromsFTPEncripted')",
															"type": "Expression"
														},
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": {
															"value": "@concat(pipeline().parameters.pRaizRuta,'/Processed')",
															"type": "Expression"
														},
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy To SQL PR_Dim_Course_Type",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Function Decrypt PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "/__"
													},
													{
														"name": "Destination",
														"value": "__"
													}
												],
												"typeProperties": {
													"source": {
														"type": "AzureDataLakeStoreSource",
														"recursive": true
													},
													"sink": {
														"type": "SqlSink",
														"writeBatchSize": 10000,
														"preCopyScript": "TRUNCATE TABLE [PEOPLE_REVIEW].[STG_PR_Dim_Course_Type]",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"dataIntegrationUnits": 0,
													"translator": {
														"type": "TabularTranslator",
														"columnMappings": {
															"Data_Load_Date": "Data_Load_Date",
															"Period": "Period",
															"Data_Source": "Data_Source",
															"Course_Type_ID": "Course_Type_ID",
															"Course_Type_Description": "Course_Type_Description",
															"Active_ID": "Active_ID"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "PR_Dim_Course_Type_Source_Lake",
														"type": "DatasetReference",
														"parameters": {
															"NameFile": {
																"value": "@activity('Function Decrypt PR_Dim_Course_Type').output.ficheroDesenc",
																"type": "Expression"
															},
															"RaizRuta": {
																"value": "@pipeline().parameters.pRaizRuta",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "PR_Dim_Course_Type_Destination_SQL",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Log OK PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Delete Decrypted File",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia OK: ',string(activity('Copy To SQL PR_Dim_Course_Type').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log KO PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Delete Decrypted Failed File",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia ERROR: ',string(activity('Copy To SQL PR_Dim_Course_Type').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "0",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log Inicio Copia PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": "Inicio proceso de copia",
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "200",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "PL_FEED__PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy To SQL PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[PL_FEED_PR_Dim_Course_Type]",
													"storedProcedureParameters": {
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"AMBITO": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "File To Processed",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "PL_FEED__PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": {
															"value": "@concat(pipeline().parameters.pRaizRuta,'/FromsFTPEncripted')",
															"type": "Expression"
														},
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": {
															"value": "@concat(pipeline().parameters.pRaizRuta,'/Processed')",
															"type": "Expression"
														},
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "File To FailedLoad",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Copy To SQL PR_Dim_Course_Type",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": {
															"value": "@concat(pipeline().parameters.pRaizRuta,'/FromsFTPEncripted')",
															"type": "Expression"
														},
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": {
															"value": "@concat(pipeline().parameters.pRaizRuta,'/FailedLoad')",
															"type": "Expression"
														},
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Function Decrypt PR_Dim_Course_Type",
												"type": "AzureFunctionActivity",
												"dependsOn": [
													{
														"activity": "Log Inicio Copia PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"functionName": {
														"value": "@concat('BridgeDecriptGPG?filename=',variables('vFileNameCurrent'),'&idexecpipeline=',pipeline().RunId, '&fileSystemName=',pipeline().parameters.pRaizRuta)",
														"type": "Expression"
													},
													"method": "GET",
													"headers": {}
												},
												"linkedServiceName": {
													"referenceName": "Connecttofunction",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Delete Decrypted Failed File",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "File To FailedLoad",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_FileReference",
														"type": "DatasetReference",
														"parameters": {
															"sFolderName": {
																"value": "@concat(pipeline().parameters.pRaizRuta,'/FromsFTP')",
																"type": "Expression"
															},
															"sFileName": {
																"value": "@activity('Function Decrypt PR_Dim_Course_Type').output.ficheroDesenc",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"maxConcurrentConnections": 1
												}
											},
											{
												"name": "Delete Decrypted File",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "File To Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_FileReference",
														"type": "DatasetReference",
														"parameters": {
															"sFolderName": {
																"value": "@concat(pipeline().parameters.pRaizRuta,'/FromsFTP')",
																"type": "Expression"
															},
															"sFileName": {
																"value": "@activity('Function Decrypt PR_Dim_Course_Type').output.ficheroDesenc",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"maxConcurrentConnections": 1
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter PR_Dim_Course_Type",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get NameFile PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get NameFile PR_Dim_Course_Type').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(indexof(item().name,'BRIDGE_PRBI_COURSE_TYPE'),0)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "File To Failed Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach PR_Dim_Course_Type",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_MoveFile",
								"type": "PipelineReference"
							},
							"parameters": {
								"sFolderOrig": {
									"value": "@concat(pipeline().parameters.pRaizRuta,'/FromsFTPEncripted')",
									"type": "Expression"
								},
								"sFileNameOrig": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								},
								"sFolderDest": {
									"value": "@concat(pipeline().parameters.pRaizRuta,'/FailedLoad')",
									"type": "Expression"
								},
								"sFileNameDest": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"pLog_AMBIT": {
						"type": "String",
						"defaultValue": "BRIDGE"
					},
					"pRaizRuta": {
						"type": "string",
						"defaultValue": "peoplereviewtest"
					}
				},
				"variables": {
					"vLog_PROCNAME": {
						"type": "String",
						"defaultValue": "pl_LoadFile_PR_Dim_Course_Type"
					},
					"vLog_ENTRY": {
						"type": "String",
						"defaultValue": "File_PR_Dim_Course_Type"
					},
					"vLog_OUT": {
						"type": "String"
					},
					"vFileNameCurrent": {
						"type": "String",
						"defaultValue": "PR_Dim_Course_Type"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]",
				"[concat(variables('factoryId'), '/datasets/DataLake_ListFiles')]",
				"[concat(variables('factoryId'), '/pipelines/pl_MoveFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLCheck_FileName')]",
				"[concat(variables('factoryId'), '/datasets/PR_Dim_Course_Type_Source_Lake')]",
				"[concat(variables('factoryId'), '/datasets/PR_Dim_Course_Type_Destination_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/Connecttofunction')]",
				"[concat(variables('factoryId'), '/datasets/DS_FileReference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_LoadFile_PR_Fact_Staff')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Inicio PR_Fact_Staff",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Inicio Pipeline",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "100",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Fin KO PR_Fact_Staff",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File To Failed Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline KO",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "0",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get NameFile PR_Fact_Staff",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Log Inicio PR_Fact_Staff",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataLake_ListFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Log Fin OK PR_Fact_Staff",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach PR_Fact_Staff",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline OK",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach PR_Fact_Staff",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter PR_Fact_Staff",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter PR_Fact_Staff').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check FileName Already PR_Fact_Staff",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set FileName PR_Fact_Staff",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINE_FILE_LOG_INSERT]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@variables('vFileNameCurrent')",
														"type": "Expression"
													}
												},
												"Proc": {
													"type": "String",
													"value": {
														"value": "@variables('vLog_PROCNAME')",
														"type": "Expression"
													}
												},
												"ID_PIPELINE": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "SQLCheck_FileName",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set FileName PR_Fact_Staff",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFileNameCurrent",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_File_ToSQL PR_Fact_Staff",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Check FileName Already PR_Fact_Staff",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Check FileName Already PR_Fact_Staff').output.firstRow.Result",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "LOG File Alredy Processed PR_Fact_Staff",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fichero ya procesado: ', variables('vFileNameCurrent'),', Se mueve a la carpeta Processed')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "300",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Move File To Processed File Alredy Processed",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy To SQL PR_Fact_Staff",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Log Inicio Copia PR_Fact_Staff",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "/__"
													},
													{
														"name": "Destination",
														"value": "__"
													}
												],
												"typeProperties": {
													"source": {
														"type": "AzureDataLakeStoreSource",
														"recursive": true
													},
													"sink": {
														"type": "SqlSink",
														"writeBatchSize": 10000,
														"preCopyScript": "TRUNCATE TABLE [PEOPLE_REVIEW].[PR_Fact_Staff]",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"dataIntegrationUnits": 0,
													"translator": {
														"type": "TabularTranslator",
														"columnMappings": {
															"Data_Load_Date": "Data_Load_Date",
															"Period": "Period",
															"Data_Source": "Data_Source",
															"Employee_ID": "Employee_ID",
															"Gender_ID": "Gender_ID",
															"Birth_Date": "Birth_Date",
															"Position": "Position",
															"Prof_Category_ID": "Prof_Category_ID",
															"Contract_Type_ID": "Contract_Type_ID",
															"Hire_Date": "Hire_Date",
															"Employment_Status_ID": "Employment_Status_ID",
															"FTE": "FTE",
															"Real_Hour": "Real_Hour",
															"Theorical_Hour": "Theorical_Hour",
															"Leaving_Date": "Leaving_Date",
															"Leave_Reason_ID": "Leave_Reason_ID",
															"Leave_Type_ID": "Leave_Type_ID",
															"International_Assigment": "International_Assigment",
															"International_Assigment_Type_ID": "International_Assigment_Type_ID",
															"International_Asgm_Start_Date": "International_Asgm_Start_Date",
															"Home_Country_ID": "Home_Country_ID",
															"Host_Country_ID": "Host_Country_ID",
															"Destination_Legal_Entity_ID": "Destination_Legal_Entity_ID",
															"Active_ID": "Active_ID"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "PR_Fact_Staff_Source_Lake",
														"type": "DatasetReference",
														"parameters": {
															"NameFile": {
																"value": "@variables('vFileNameCurrent')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "PR_Fact_Staff_Destination_SQL",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Log OK PR_Fact_Staff",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "File To Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia OK: ',string(activity('Copy To SQL PR_Fact_Staff').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log KO PR_Fact_Staff",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "File To FailedLoad",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia ERROR: ',string(activity('Copy To SQL PR_Fact_Staff').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "0",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log Inicio Copia PR_Fact_Staff",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": "Inicio proceso de copia",
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "200",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "PL_FEED__PR_Fact_Staff",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy To SQL PR_Fact_Staff",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[PL_FEED_PR_Fact_Staff]",
													"storedProcedureParameters": {
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"AMBITO": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "File To Processed",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "PL_FEED__PR_Fact_Staff",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "File To FailedLoad",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Copy To SQL PR_Fact_Staff",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "FailedLoad",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter PR_Fact_Staff",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get NameFile PR_Fact_Staff",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get NameFile PR_Fact_Staff').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(greaterOrEquals(indexof(item().name,'BRIDGE_PRBI_STAFF'),0),endswith(item().name,'.TXT')) ",
								"type": "Expression"
							}
						}
					},
					{
						"name": "File To Failed Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach PR_Fact_Staff",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_MoveFile",
								"type": "PipelineReference"
							},
							"parameters": {
								"sFolderOrig": "FromsFTP",
								"sFileNameOrig": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								},
								"sFolderDest": "FailedLoad",
								"sFileNameDest": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"pLog_AMBIT": {
						"type": "String",
						"defaultValue": "OBRA"
					}
				},
				"variables": {
					"vLog_PROCNAME": {
						"type": "String",
						"defaultValue": "pl_LoadFile_PR_Fact_Staff"
					},
					"vLog_ENTRY": {
						"type": "String",
						"defaultValue": "File_PR_Fact_Staff"
					},
					"vLog_OUT": {
						"type": "String"
					},
					"vFileNameCurrent": {
						"type": "String",
						"defaultValue": "PR_Fact_Staff"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]",
				"[concat(variables('factoryId'), '/datasets/DataLake_ListFiles')]",
				"[concat(variables('factoryId'), '/pipelines/pl_MoveFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLCheck_FileName')]",
				"[concat(variables('factoryId'), '/datasets/PR_Fact_Staff_Source_Lake')]",
				"[concat(variables('factoryId'), '/datasets/PR_Fact_Staff_Destination_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_MoveFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_FileReference",
								"type": "DatasetReference",
								"parameters": {
									"sFolderName": {
										"value": "@pipeline().parameters.sFolderOrig",
										"type": "Expression"
									},
									"sFileName": {
										"value": "@pipeline().parameters.sFileNameOrig",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"maxConcurrentConnections": 1
						}
					},
					{
						"name": "Copy File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": false
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_FileReference",
								"type": "DatasetReference",
								"parameters": {
									"sFolderName": {
										"value": "@pipeline().parameters.sFolderOrig",
										"type": "Expression"
									},
									"sFileName": {
										"value": "@pipeline().parameters.sFileNameOrig",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_FileReference",
								"type": "DatasetReference",
								"parameters": {
									"sFolderName": {
										"value": "@pipeline().parameters.sFolderDest",
										"type": "Expression"
									},
									"sFileName": {
										"value": "@pipeline().parameters.sFileNameDest",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"sFolderOrig": {
						"type": "String"
					},
					"sFileNameOrig": {
						"type": "String"
					},
					"sFolderDest": {
						"type": "String"
					},
					"sFileNameDest": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_FileReference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_NEWAMS_old')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Inicio NEWAMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Inicio Pipeline",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "100",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql_ams",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Fin KO NEWAMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File To Failed Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline KO",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "0",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql_ams",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get NameFile NEWAMS",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Log Inicio NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataLake_ListFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Log Fin OK NEWAMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": {
										"value": "@concat('Fin Pipeline OK',if(variables('vEjecucionConErores'),': Finalizado con errores',''))",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql_ams",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach NEWAMS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter NEWAMS').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check FileName Already NEWAMS",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set FileName NEWAMS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[ITC_PIPELINE_FILE_LOG_INSERT]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@variables('vFileNameCurrent')",
														"type": "Expression"
													}
												},
												"ID_Pipeline": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"Proc": {
													"type": "String",
													"value": {
														"value": "@variables('vLog_PROCNAME')",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "SQLCheck_FileName_ams",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set FileName NEWAMS",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFileNameCurrent",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_File_ToSQL NEWAMS",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Check FileName Already NEWAMS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Check FileName Already NEWAMS').output.firstRow.Result",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "LOG File Alredy Processed NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Move File To Processed File Alredy Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "ITC_PIPELINECONTROL_INSERT",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fichero ya procesado: ', variables('vFileNameCurrent'),', Se mueve a la carpeta Processed')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "300",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Move File To Processed File Alredy Processed",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy To SQL NEWAMS",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Log Inicio Copia NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDataLakeStoreSource",
														"recursive": true
													},
													"sink": {
														"type": "SqlSink",
														"writeBatchSize": 10000,
														"preCopyScript": "TRUNCATE TABLE [STG_T_NEWAMS]",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"dataIntegrationUnits": 0,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "Opportunity ID #"
																},
																"sink": {
																	"name": "Opportunity_ID",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Reporting Status"
																},
																"sink": {
																	"name": "Reporting_Status",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "OG"
																},
																"sink": {
																	"name": "OG",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "OU"
																},
																"sink": {
																	"name": "OU",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "CSG"
																},
																"sink": {
																	"name": "CSG",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Sub-CSG"
																},
																"sink": {
																	"name": "Sub_CSG",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Master Client Name"
																},
																"sink": {
																	"name": "Master_Client_Name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Master Client Class"
																},
																"sink": {
																	"name": "Master_Client_Class",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Financial Customer Name"
																},
																"sink": {
																	"name": "Financial_Customer_Name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "CR Name",
																	"type": "String"
																},
																"sink": {
																	"name": "CR_Name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Opportunity Name",
																	"type": "String"
																},
																"sink": {
																	"name": "Opportunity_Name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Industry Segment",
																	"type": "String"
																},
																"sink": {
																	"name": "Industry_Segment",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Industry Sub-Segment"
																},
																"sink": {
																	"name": "Industry_Sub_Segment",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Opportunity Class",
																	"type": "String"
																},
																"sink": {
																	"name": "Opportunity_Class",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Stage"
																},
																"sink": {
																	"name": "Stage",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Restricted"
																},
																"sink": {
																	"name": "Restricted",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Win Probability",
																	"type": "String"
																},
																"sink": {
																	"name": "Win_Probability",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Total Current Revenue",
																	"type": "String"
																},
																"sink": {
																	"name": "Total_Current_Revenue",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "CCI"
																},
																"sink": {
																	"name": "CCI",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "CCI%"
																},
																"sink": {
																	"name": "CCI1",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Target Margin %",
																	"type": "String"
																},
																"sink": {
																	"name": "Target_Margin",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Create Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Create_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Stage Update Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Stage_Update_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pipeline Entry Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Pipeline_Entry_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Proposal Submission Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Proposal_Submission_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Expected Contract Signing Date"
																},
																"sink": {
																	"name": "Expected_Contract_Signing_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Status Since Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Status_Since_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Cons Start Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Cons_Start_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Cons End Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Cons_End_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "OS Start Date",
																	"type": "String"
																},
																"sink": {
																	"name": "OS_Start_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "OS End Date",
																	"type": "String"
																},
																"sink": {
																	"name": "OS_End_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "ECSD Quarter",
																	"type": "String"
																},
																"sink": {
																	"name": "ECSD_Quarter",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "RSD Quarter",
																	"type": "String"
																},
																"sink": {
																	"name": "RSD_Quarter",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "ToW"
																},
																"sink": {
																	"name": "ToW",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Business Dimensions",
																	"type": "String"
																},
																"sink": {
																	"name": "Business_Dimensions",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "SG"
																},
																"sink": {
																	"name": "SG",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Service Start Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Service_Start_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Service End Date",
																	"type": "String"
																},
																"sink": {
																	"name": "Service_End_Date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "SSG"
																},
																"sink": {
																	"name": "SSG",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Opp Service Revenue",
																	"type": "String"
																},
																"sink": {
																	"name": "Opp_Service_Revenue",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Current Revenue",
																	"type": "String"
																},
																"sink": {
																	"name": "Current_Revenue",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Wtd Current Revenue",
																	"type": "String"
																},
																"sink": {
																	"name": "Wtd_Current_Revenue",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Target Price",
																	"type": "String"
																},
																"sink": {
																	"name": "Target_Price",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "CCI2"
																},
																"sink": {
																	"name": "CCI2",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Total CCI%",
																	"type": "String"
																},
																"sink": {
																	"name": "Total_CCI",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Global Client Account Lead"
																},
																"sink": {
																	"name": "Global_Client_Account_Lead",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Technology Services Lead",
																	"type": "String"
																},
																"sink": {
																	"name": "Technology_Services_Lead",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Client Account Lead",
																	"type": "String"
																},
																"sink": {
																	"name": "Client_Account_Lead",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Sales Capture (Primary)"
																},
																"sink": {
																	"name": "Sales_Capture_Primary",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Contract Extension Flag",
																	"type": "String"
																},
																"sink": {
																	"name": "Contract_Extension_Flag",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Selling Country/Location"
																},
																"sink": {
																	"name": "Selling_Country_Location",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Geo Unit",
																	"type": "String"
																},
																"sink": {
																	"name": "Geo_Unit",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Primary Work Location",
																	"type": "String"
																},
																"sink": {
																	"name": "Primary_Work_Location",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Delivery Centers",
																	"type": "String"
																},
																"sink": {
																	"name": "Delivery_Centers",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Competitor"
																},
																"sink": {
																	"name": "Competitor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Winning Competitor",
																	"type": "String"
																},
																"sink": {
																	"name": "Winning_Competitor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Reason"
																},
																"sink": {
																	"name": "Reason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Competitive / Sole Source"
																},
																"sink": {
																	"name": "Competitive_Sole_Source",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Third Party Advisor",
																	"type": "String"
																},
																"sink": {
																	"name": "Third_Party_Advisor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Digital"
																},
																"sink": {
																	"name": "Digital",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Accenture Products & Platforms"
																},
																"sink": {
																	"name": "Accenture_Products_Platforms",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Alliances"
																},
																"sink": {
																	"name": "Alliances",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Business Service",
																	"type": "String"
																},
																"sink": {
																	"name": "Business_Service",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Consulting Practice",
																	"type": "String"
																},
																"sink": {
																	"name": "Consulting_Practice",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Cross Service Group Offering"
																},
																"sink": {
																	"name": "Cross_Service_Group_Offering",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Mergers & Acquisitions",
																	"type": "String"
																},
																"sink": {
																	"name": "Mergers_Acquisitions",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Strategy Offerings",
																	"type": "String"
																},
																"sink": {
																	"name": "Strategy_Offerings",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Tech/Operations Offerings"
																},
																"sink": {
																	"name": "Tech_Operations_Offerings",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Win Category",
																	"type": "String"
																},
																"sink": {
																	"name": "Win_Category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " Extension/non-Extension "
																},
																"sink": {
																	"name": "Extension_non_Extension",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " Deal size "
																},
																"sink": {
																	"name": "Deal_size",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " OG Abbrev "
																},
																"sink": {
																	"name": "OG_Abbrev",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " Geo-Unit "
																},
																"sink": {
																	"name": "Geo_Unit1",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " Country "
																},
																"sink": {
																	"name": "Country",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " Master Client Lvl 2 "
																},
																"sink": {
																	"name": "Master_Client_Lvl_2",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "New"
																},
																"sink": {
																	"name": "New",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " New since last week "
																},
																"sink": {
																	"name": "New_since_last_week",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " New this month "
																},
																"sink": {
																	"name": "New_this_month",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": " Deal Volume ",
																	"type": "String"
																},
																"sink": {
																	"name": "Deal_Volume",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Master Contract",
																	"type": "String"
																},
																"sink": {
																	"name": "Master_Contract",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Master Contract Name (Global)"
																},
																"sink": {
																	"name": "Master_Contract_Name_Global",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Valid from",
																	"type": "String"
																},
																"sink": {
																	"name": "Valid_from",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Valid to",
																	"type": "String"
																},
																"sink": {
																	"name": "Valid_to",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Sales Sept",
																	"type": "String"
																},
																"sink": {
																	"name": "Sales_Sept",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Revenue Sept",
																	"type": "String"
																},
																"sink": {
																	"name": "Revenue_Sept",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Contract CI Sept",
																	"type": "String"
																},
																"sink": {
																	"name": "Contract_CI_Sept",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ds_NEWAMS_Source_Lake_old",
														"type": "DatasetReference",
														"parameters": {
															"FileName": {
																"value": "@variables('vFileNameCurrent')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_NEWAMS_Destination_SQL_old",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Log OK NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "File To Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "ITC_PIPELINECONTROL_INSERT",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia OK: ',string(activity('Copy To SQL NEWAMS').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log KO NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Set EjecucionConErrores NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "ITC_PIPELINECONTROL_INSERT",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia ERROR: ',string(activity('Copy To SQL NEWAMS').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "0",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log Inicio Copia NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "ITC_PIPELINECONTROL_INSERT",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": "Inicio proceso de copia",
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "200",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "PL_FEED__NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy To SQL NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PL_FEED_NEWAMS]",
													"storedProcedureParameters": {
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"AMBITO": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "File To Processed",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "PL_FEED__NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "File To FailedLoad",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Copy To SQL NEWAMS",
														"dependencyConditions": [
															"Failed"
														]
													},
													{
														"activity": "PL_FEED__NEWAMS",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "FailedLoad",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Set EjecucionConErrores NEWAMS",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "File To FailedLoad",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "vEjecucionConErores",
													"value": true
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter NEWAMS",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get NameFile NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get NameFile NEWAMS').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(  greaterOrEquals(indexof(item().name,'AMS'),0),  endswith(item().name,'.csv') )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "File To Failed Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach NEWAMS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_MoveFile",
								"type": "PipelineReference"
							},
							"parameters": {
								"sFolderOrig": {
									"value": "@concat('FromsFTP')",
									"type": "Expression"
								},
								"sFileNameOrig": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								},
								"sFolderDest": {
									"value": "@concat('FailedLoad')",
									"type": "Expression"
								},
								"sFileNameDest": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"pLog_AMBIT": {
						"type": "String",
						"defaultValue": "AMS"
					}
				},
				"variables": {
					"vLog_PROCNAME": {
						"type": "String",
						"defaultValue": "pl_NEWAMS"
					},
					"vLog_ENTRY": {
						"type": "String",
						"defaultValue": "File_NEWAMS"
					},
					"vLog_OUT": {
						"type": "String",
						"defaultValue": "[[STG_T_NEWAMS]"
					},
					"vFileNameCurrent": {
						"type": "String"
					},
					"vEjecucionConErores": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql_ams')]",
				"[concat(variables('factoryId'), '/datasets/DataLake_ListFiles')]",
				"[concat(variables('factoryId'), '/pipelines/pl_MoveFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLCheck_FileName_ams')]",
				"[concat(variables('factoryId'), '/datasets/ds_NEWAMS_Source_Lake_old')]",
				"[concat(variables('factoryId'), '/datasets/ds_NEWAMS_Destination_SQL_old')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Inicio TEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[FINANCE].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Inicio Pipeline",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "100",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Fin KO TEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File To Failed Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[FINANCE].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline KO",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "0",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get NameFile TEST",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Log Inicio TEST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataLake_ListFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Log Fin OK TEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach TEST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[FINANCE].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": {
										"value": "@concat('Fin Pipeline OK',if(variables('vEjecucionConErores'),': Finalizado con errores',''))",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach TEST",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter TEST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter TEST').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check FileName Already TEST",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set FileName TEST",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "FINANCE].[ITC_PIPELINE_FILE_LOG_INSERT]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@variables('vFileNameCurrent')",
														"type": "Expression"
													}
												},
												"Proc": {
													"type": "String",
													"value": {
														"value": "@variables('vLog_PROCNAME')",
														"type": "Expression"
													}
												},
												"ID_PIPELINE": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "SQLCheck_FileName",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set FileName TEST",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFileNameCurrent",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_File_ToSQL TEST",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Check FileName Already TEST",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Check FileName Already TEST').output.firstRow.Result",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "LOG File Alredy Processed TEST",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Move File To Processed File Alredy Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[FINANCE].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fichero ya procesado: ', variables('vFileNameCurrent'),', Se mueve a la carpeta Processed')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "300",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Move File To Processed File Alredy Processed",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy To SQL TEST",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Log Inicio Copia TEST",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDataLakeStoreSource",
														"recursive": true
													},
													"sink": {
														"type": "SqlSink",
														"writeBatchSize": 10000,
														"preCopyScript": "TRUNCATE TABLE [FINANCE].[STG_T_TEST]",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"dataIntegrationUnits": 0,
													"translator": {
														"type": "TabularTranslator",
														"columnMappings": {
															"fecha": "fecha",
															"identificador": "identificador",
															"nombre": "nombre",
															"valor": "valor"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_TEST_Source_Lake",
														"type": "DatasetReference",
														"parameters": {
															"FileName": {
																"value": "@variables('vFileNameCurrent')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_TEST_Destination_SQL",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Log OK TEST",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "File To Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[FINANCE].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia OK: ',string(activity('Copy To SQL TEST').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log KO TEST",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Set EjecucionConErrores TEST",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[FINANCE].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia ERROR: ',string(activity('Copy To SQL TEST').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "0",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log Inicio Copia TEST",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[FINANCE].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": "Inicio proceso de copia",
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "200",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "PL_FEED__TEST",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy To SQL TEST",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[FINANCE].[PL_FEED_TEST]",
													"storedProcedureParameters": {
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"AMBITO": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "File To Processed",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "PL_FEED__TEST",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "File To FailedLoad",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Copy To SQL TEST",
														"dependencyConditions": [
															"Failed"
														]
													},
													{
														"activity": "PL_FEED__TEST",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "FailedLoad",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Set EjecucionConErrores TEST",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "File To FailedLoad",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "vEjecucionConErores",
													"value": true
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter TEST",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get NameFile TEST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get NameFile TEST').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(indexof(item().name,'test'),0)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "File To Failed Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach TEST",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_MoveFile",
								"type": "PipelineReference"
							},
							"parameters": {
								"sFolderOrig": {
									"value": "@concat('FromsFTP')",
									"type": "Expression"
								},
								"sFileNameOrig": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								},
								"sFolderDest": {
									"value": "@concat('FailedLoad')",
									"type": "Expression"
								},
								"sFileNameDest": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"pLog_AMBIT": {
						"type": "String"
					}
				},
				"variables": {
					"vLog_PROCNAME": {
						"type": "String",
						"defaultValue": "pl_TEST"
					},
					"vLog_ENTRY": {
						"type": "String",
						"defaultValue": "File_TEST"
					},
					"vLog_OUT": {
						"type": "String",
						"defaultValue": "[[FINANCE].[STG_T_TEST]"
					},
					"vFileNameCurrent": {
						"type": "String"
					},
					"vEjecucionConErores": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]",
				"[concat(variables('factoryId'), '/datasets/DataLake_ListFiles')]",
				"[concat(variables('factoryId'), '/pipelines/pl_MoveFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLCheck_FileName')]",
				"[concat(variables('factoryId'), '/datasets/ds_TEST_Source_Lake')]",
				"[concat(variables('factoryId'), '/datasets/ds_TEST_Destination_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_biinsite')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Inicio PR_Dim_Course_Type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Inicio Pipeline",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "100",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Fin KO PR_Dim_Course_Type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File To Failed Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline KO",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "0",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get NameFile PR_Dim_Course_Type",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Log Inicio PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataLake_ListFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Log Fin OK PR_Dim_Course_Type",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": {
										"value": "@concat('Fin Pipeline OK',if(variables('vEjecucionConErores'),': Finalizado con errores',''))",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach PR_Dim_Course_Type",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter PR_Dim_Course_Type').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check FileName Already PR_Dim_Course_Type",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set FileName PR_Dim_Course_Type",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINE_FILE_LOG_INSERT]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@variables('vFileNameCurrent')",
														"type": "Expression"
													}
												},
												"Proc": {
													"type": "String",
													"value": {
														"value": "@variables('vLog_PROCNAME')",
														"type": "Expression"
													}
												},
												"ID_PIPELINE": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "SQLCheck_FileName",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set FileName PR_Dim_Course_Type",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFileNameCurrent",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_File_ToSQL PR_Dim_Course_Type",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Check FileName Already PR_Dim_Course_Type",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Check FileName Already PR_Dim_Course_Type').output.firstRow.Result",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "LOG File Alredy Processed PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Move File To Processed File Alredy Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fichero ya procesado: ', variables('vFileNameCurrent'),', Se mueve a la carpeta Processed')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "300",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Move File To Processed File Alredy Processed",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy To SQL PR_Dim_Course_Type",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Log Inicio Copia PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDataLakeStoreSource",
														"recursive": true
													},
													"sink": {
														"type": "SqlSink",
														"writeBatchSize": 10000,
														"preCopyScript": "TRUNCATE TABLE [PEOPLE_REVIEW].[STG_PR_Dim_Course_Type]",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"dataIntegrationUnits": 0,
													"translator": {
														"type": "TabularTranslator",
														"columnMappings": {
															"Data_Load_Date": "Data_Load_Date",
															"Period": "Period",
															"Data_Source": "Data_Source",
															"Course_Type_ID": "Course_Type_ID",
															"Course_Type_Description": "Course_Type_Description",
															"Active_ID": "Active_ID"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_biinsite_SourceLake",
														"type": "DatasetReference",
														"parameters": {
															"pFileName": {
																"value": "@variables('vFileNameCurrent')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_biinsite_Destination_SQL",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Log OK PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "File To Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia OK: ',string(activity('Copy To SQL PR_Dim_Course_Type').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log KO PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Set EjecucionConErrores PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia ERROR: ',string(activity('Copy To SQL PR_Dim_Course_Type').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "0",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log Inicio Copia PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": "Inicio proceso de copia",
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "200",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "PL_FEED__PR_Dim_Course_Type",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy To SQL PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PEOPLE_REVIEW].[PL_FEED_PR_Dim_Course_Type]",
													"storedProcedureParameters": {
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"AMBITO": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "File To Processed",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "PL_FEED__PR_Dim_Course_Type",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "File To FailedLoad",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Copy To SQL PR_Dim_Course_Type",
														"dependencyConditions": [
															"Failed"
														]
													},
													{
														"activity": "PL_FEED__PR_Dim_Course_Type",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "FailedLoad",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Set EjecucionConErrores PR_Dim_Course_Type",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "File To FailedLoad",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "vEjecucionConErores",
													"value": true
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter PR_Dim_Course_Type",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get NameFile PR_Dim_Course_Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get NameFile PR_Dim_Course_Type').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(indexof(item().name,'BRIDGE_PRBI_COURSE_TYPE'),0)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "File To Failed Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach PR_Dim_Course_Type",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_MoveFile",
								"type": "PipelineReference"
							},
							"parameters": {
								"sFolderOrig": {
									"value": "@concat(pipeline().parameters.pRaizRuta,'/FromsFTPEncripted')",
									"type": "Expression"
								},
								"sFileNameOrig": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								},
								"sFolderDest": {
									"value": "@concat(pipeline().parameters.pRaizRuta,'/FailedLoad')",
									"type": "Expression"
								},
								"sFileNameDest": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"pLog_AMBIT": {
						"type": "String",
						"defaultValue": "BRIDGE"
					},
					"pRaizRuta": {
						"type": "string",
						"defaultValue": "peoplereviewtest"
					}
				},
				"variables": {
					"vLog_PROCNAME": {
						"type": "String",
						"defaultValue": "pl_LoadFile_PR_Dim_Course_Type"
					},
					"vLog_ENTRY": {
						"type": "String",
						"defaultValue": "File_PR_Dim_Course_Type"
					},
					"vLog_OUT": {
						"type": "String",
						"defaultValue": "[[finance].[STG_t_biinsite]"
					},
					"vFileNameCurrent": {
						"type": "String",
						"defaultValue": "PR_Dim_Course_Type"
					},
					"vEjecucionConErores": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]",
				"[concat(variables('factoryId'), '/datasets/DataLake_ListFiles')]",
				"[concat(variables('factoryId'), '/pipelines/pl_MoveFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLCheck_FileName')]",
				"[concat(variables('factoryId'), '/datasets/ds_biinsite_SourceLake')]",
				"[concat(variables('factoryId'), '/datasets/ds_biinsite_Destination_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_azureFunction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "PGPDecrypt",
							"method": "POST",
							"headers": {},
							"body": {
								"privateKeySecretId": "uno",
								"passPhraseSecretId": "dos"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureFunction1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFunction1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "origen",
						"fileSystem": "containertest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "destino",
						"fileSystem": "containertest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "procesado",
						"fileSystem": "containertest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_FileReference')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sFolderName": {
						"type": "String"
					},
					"sFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('DS_FileReference_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('DS_FileReference_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLake_ListFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('DataLake_ListFiles_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('DataLake_ListFiles_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PR_Dim_Course_Type_Destination_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Data_Load_Date",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_Source",
						"type": "String"
					},
					{
						"name": "Course_Type_ID",
						"type": "String"
					},
					{
						"name": "Course_Type_Description",
						"type": "String"
					},
					{
						"name": "Active_ID",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[PEOPLE_REVIEW].[STG_PR_Dim_Course_Type]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PR_Dim_Course_Type_Source_Lake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NameFile": {
						"type": "String"
					},
					"RaizRuta": {
						"type": "string",
						"defaultValue": "peoplereviewtest"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "Data_Load_Date",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_Source",
						"type": "String"
					},
					{
						"name": "Course_Type_ID",
						"type": "String"
					},
					{
						"name": "Course_Type_Description",
						"type": "String"
					},
					{
						"name": "Active_ID",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "|",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('PR_Dim_Course_Type_Source_Lake_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('PR_Dim_Course_Type_Source_Lake_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PR_Fact_Staff_Destination_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Data_Load_Date",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_Source",
						"type": "String"
					},
					{
						"name": "Employee_ID",
						"type": "String"
					},
					{
						"name": "Gender_ID",
						"type": "String"
					},
					{
						"name": "Birth_Date",
						"type": "String"
					},
					{
						"name": "Position",
						"type": "String"
					},
					{
						"name": "Prof_Category_ID",
						"type": "String"
					},
					{
						"name": "Contract_Type_ID",
						"type": "String"
					},
					{
						"name": "Hire_Date",
						"type": "String"
					},
					{
						"name": "Employment_Status_ID",
						"type": "String"
					},
					{
						"name": "FTE",
						"type": "Decimal"
					},
					{
						"name": "Real_Hour",
						"type": "Decimal"
					},
					{
						"name": "Theorical_Hour",
						"type": "Decimal"
					},
					{
						"name": "Leaving_Date",
						"type": "String"
					},
					{
						"name": "Leave_Reason_ID",
						"type": "String"
					},
					{
						"name": "Leave_Type_ID",
						"type": "String"
					},
					{
						"name": "International_Assigment",
						"type": "String"
					},
					{
						"name": "International_Assigment_Type_ID",
						"type": "String"
					},
					{
						"name": "International_Asgm_Start_Date",
						"type": "String"
					},
					{
						"name": "Home_Country_ID",
						"type": "String"
					},
					{
						"name": "Host_Country_ID",
						"type": "String"
					},
					{
						"name": "Destination_Legal_Entity_ID",
						"type": "String"
					},
					{
						"name": "Active_ID",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[PEOPLE_REVIEW].[STG_PR_Fact_Staff]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PR_Fact_Staff_Source_Lake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NameFile": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "Data_Load_Date",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_Source",
						"type": "String"
					},
					{
						"name": "Employee_ID",
						"type": "String"
					},
					{
						"name": "Gender_ID",
						"type": "String"
					},
					{
						"name": "Birth_Date",
						"type": "String"
					},
					{
						"name": "Position",
						"type": "String"
					},
					{
						"name": "Prof_Category_ID",
						"type": "String"
					},
					{
						"name": "Contract_Type_ID",
						"type": "String"
					},
					{
						"name": "Hire_Date",
						"type": "String"
					},
					{
						"name": "Employment_Status_ID",
						"type": "String"
					},
					{
						"name": "FTE",
						"type": "Decimal"
					},
					{
						"name": "Real_Hour",
						"type": "Decimal"
					},
					{
						"name": "Theorical_Hour",
						"type": "Decimal"
					},
					{
						"name": "Leaving_Date",
						"type": "String"
					},
					{
						"name": "Leave_Reason_ID",
						"type": "String"
					},
					{
						"name": "Leave_Type_ID",
						"type": "String"
					},
					{
						"name": "International_Assigment",
						"type": "String"
					},
					{
						"name": "International_Assigment_Type_ID",
						"type": "String"
					},
					{
						"name": "International_Asgm_Start_Date",
						"type": "String"
					},
					{
						"name": "Home_Country_ID",
						"type": "String"
					},
					{
						"name": "Host_Country_ID",
						"type": "String"
					},
					{
						"name": "Destination_Legal_Entity_ID",
						"type": "String"
					},
					{
						"name": "Active_ID",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ";",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('PR_Fact_Staff_Source_Lake_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('PR_Fact_Staff_Source_Lake_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLCheck_FileName')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "PEOPLE_REVIEW",
					"table": "ITC_PIPELINECONTROL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLCheck_FileName_ams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql_ams",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ITC_PIPELINECONTROL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql_ams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_NEWAMS_Destination_SQL_old')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql_ams",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Opportunity_ID",
						"type": "varchar"
					},
					{
						"name": "Reporting_Status",
						"type": "nvarchar"
					},
					{
						"name": "OG",
						"type": "nvarchar"
					},
					{
						"name": "OU",
						"type": "nvarchar"
					},
					{
						"name": "CSG",
						"type": "nvarchar"
					},
					{
						"name": "Sub_CSG",
						"type": "nvarchar"
					},
					{
						"name": "Master_Client_Name",
						"type": "nvarchar"
					},
					{
						"name": "Master_Client_Class",
						"type": "nvarchar"
					},
					{
						"name": "Financial_Customer_Name",
						"type": "nvarchar"
					},
					{
						"name": "CR_Name",
						"type": "nvarchar"
					},
					{
						"name": "Opportunity_Name",
						"type": "nvarchar"
					},
					{
						"name": "Industry_Segment",
						"type": "nvarchar"
					},
					{
						"name": "Industry_Sub_Segment",
						"type": "nvarchar"
					},
					{
						"name": "Opportunity_Class",
						"type": "nvarchar"
					},
					{
						"name": "Stage",
						"type": "nvarchar"
					},
					{
						"name": "Restricted",
						"type": "varchar"
					},
					{
						"name": "Win_Probability",
						"type": "varchar"
					},
					{
						"name": "Total_Current_Revenue",
						"type": "varchar"
					},
					{
						"name": "CCI",
						"type": "varchar"
					},
					{
						"name": "CCI1",
						"type": "varchar"
					},
					{
						"name": "Target_Margin",
						"type": "varchar"
					},
					{
						"name": "Create_Date",
						"type": "varchar"
					},
					{
						"name": "Stage_Update_Date",
						"type": "varchar"
					},
					{
						"name": "Pipeline_Entry_Date",
						"type": "varchar"
					},
					{
						"name": "Proposal_Submission_Date",
						"type": "varchar"
					},
					{
						"name": "Expected_Contract_Signing_Date",
						"type": "varchar"
					},
					{
						"name": "Status_Since_Date",
						"type": "varchar"
					},
					{
						"name": "Cons_Start_Date",
						"type": "varchar"
					},
					{
						"name": "Cons_End_Date",
						"type": "varchar"
					},
					{
						"name": "OS_Start_Date",
						"type": "varchar"
					},
					{
						"name": "OS_End_Date",
						"type": "varchar"
					},
					{
						"name": "ECSD_Quarter",
						"type": "nvarchar"
					},
					{
						"name": "RSD_Quarter",
						"type": "nvarchar"
					},
					{
						"name": "ToW",
						"type": "nvarchar"
					},
					{
						"name": "Business_Dimensions",
						"type": "nvarchar"
					},
					{
						"name": "SG",
						"type": "nvarchar"
					},
					{
						"name": "Service_Start_Date",
						"type": "varchar"
					},
					{
						"name": "Service_End_Date",
						"type": "varchar"
					},
					{
						"name": "SSG",
						"type": "nvarchar"
					},
					{
						"name": "Opp_Service_Revenue",
						"type": "varchar"
					},
					{
						"name": "Current_Revenue",
						"type": "varchar"
					},
					{
						"name": "Wtd_Current_Revenue",
						"type": "varchar"
					},
					{
						"name": "Target_Price",
						"type": "varchar"
					},
					{
						"name": "CCI2",
						"type": "varchar"
					},
					{
						"name": "Total_CCI",
						"type": "varchar"
					},
					{
						"name": "Global_Client_Account_Lead",
						"type": "nvarchar"
					},
					{
						"name": "Technology_Services_Lead",
						"type": "nvarchar"
					},
					{
						"name": "Client_Account_Lead",
						"type": "nvarchar"
					},
					{
						"name": "Sales_Capture_Primary",
						"type": "nvarchar"
					},
					{
						"name": "Contract_Extension_Flag",
						"type": "varchar"
					},
					{
						"name": "Selling_Country_Location",
						"type": "nvarchar"
					},
					{
						"name": "Geo_Unit",
						"type": "nvarchar"
					},
					{
						"name": "Primary_Work_Location",
						"type": "nvarchar"
					},
					{
						"name": "Delivery_Centers",
						"type": "nvarchar"
					},
					{
						"name": "Competitor",
						"type": "nvarchar"
					},
					{
						"name": "Winning_Competitor",
						"type": "nvarchar"
					},
					{
						"name": "Reason",
						"type": "nvarchar"
					},
					{
						"name": "Competitive_Sole_Source",
						"type": "nvarchar"
					},
					{
						"name": "Third_Party_Advisor",
						"type": "nvarchar"
					},
					{
						"name": "Digital",
						"type": "nvarchar"
					},
					{
						"name": "Accenture_Products_Platforms",
						"type": "nvarchar"
					},
					{
						"name": "Alliances",
						"type": "nvarchar"
					},
					{
						"name": "Business_Service",
						"type": "nvarchar"
					},
					{
						"name": "Consulting_Practice",
						"type": "nvarchar"
					},
					{
						"name": "Cross_Service_Group_Offering",
						"type": "nvarchar"
					},
					{
						"name": "Mergers_Acquisitions",
						"type": "nvarchar"
					},
					{
						"name": "Strategy_Offerings",
						"type": "nvarchar"
					},
					{
						"name": "Tech_Operations_Offerings",
						"type": "nvarchar"
					},
					{
						"name": "Win_Category",
						"type": "nvarchar"
					},
					{
						"name": "Extension_non_Extension",
						"type": "nvarchar"
					},
					{
						"name": "Deal_size",
						"type": "nvarchar"
					},
					{
						"name": "OG_Abbrev",
						"type": "nvarchar"
					},
					{
						"name": "Geo_Unit1",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Master_Client_Lvl_2",
						"type": "nvarchar"
					},
					{
						"name": "New",
						"type": "nvarchar"
					},
					{
						"name": "New_since_last_week",
						"type": "varchar"
					},
					{
						"name": "New_this_month",
						"type": "varchar"
					},
					{
						"name": "Deal_Volume",
						"type": "varchar"
					},
					{
						"name": "Master_Contract",
						"type": "varchar"
					},
					{
						"name": "Master_Contract_Name_Global",
						"type": "nvarchar"
					},
					{
						"name": "Valid_from",
						"type": "varchar"
					},
					{
						"name": "Valid_to",
						"type": "varchar"
					},
					{
						"name": "Sales_Sept",
						"type": "varchar"
					},
					{
						"name": "Revenue_Sept",
						"type": "varchar"
					},
					{
						"name": "Contract_CI_Sept",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "STG_T_NEWAMS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql_ams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_NEWAMS_Source_Lake_old')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "Opportunity ID #",
						"type": "String"
					},
					{
						"name": "Reporting Status",
						"type": "String"
					},
					{
						"name": "OG",
						"type": "String"
					},
					{
						"name": "OU",
						"type": "String"
					},
					{
						"name": "CSG",
						"type": "String"
					},
					{
						"name": "Sub-CSG",
						"type": "String"
					},
					{
						"name": "Master Client Name",
						"type": "String"
					},
					{
						"name": "Master Client Class",
						"type": "String"
					},
					{
						"name": "Financial Customer Name",
						"type": "String"
					},
					{
						"name": "CR Name",
						"type": "String"
					},
					{
						"name": "Opportunity Name",
						"type": "String"
					},
					{
						"name": "Industry Segment",
						"type": "String"
					},
					{
						"name": "Industry Sub-Segment",
						"type": "String"
					},
					{
						"name": "Opportunity Class",
						"type": "String"
					},
					{
						"name": "Stage",
						"type": "String"
					},
					{
						"name": "Restricted",
						"type": "String"
					},
					{
						"name": "Win Probability",
						"type": "String"
					},
					{
						"name": "Total Current Revenue",
						"type": "String"
					},
					{
						"name": "CCI",
						"type": "String"
					},
					{
						"name": "CCI%",
						"type": "String"
					},
					{
						"name": "Target Margin %",
						"type": "String"
					},
					{
						"name": "Create Date",
						"type": "String"
					},
					{
						"name": "Stage Update Date",
						"type": "String"
					},
					{
						"name": "Pipeline Entry Date",
						"type": "String"
					},
					{
						"name": "Proposal Submission Date",
						"type": "String"
					},
					{
						"name": "Expected Contract Signing Date",
						"type": "String"
					},
					{
						"name": "Status Since Date",
						"type": "String"
					},
					{
						"name": "Cons Start Date",
						"type": "String"
					},
					{
						"name": "Cons End Date",
						"type": "String"
					},
					{
						"name": "OS Start Date",
						"type": "String"
					},
					{
						"name": "OS End Date",
						"type": "String"
					},
					{
						"name": "ECSD Quarter",
						"type": "String"
					},
					{
						"name": "RSD Quarter",
						"type": "String"
					},
					{
						"name": "ToW",
						"type": "String"
					},
					{
						"name": "Business Dimensions",
						"type": "String"
					},
					{
						"name": "SG",
						"type": "String"
					},
					{
						"name": "Service Start Date",
						"type": "String"
					},
					{
						"name": "Service End Date",
						"type": "String"
					},
					{
						"name": "SSG",
						"type": "String"
					},
					{
						"name": "Opp Service Revenue",
						"type": "String"
					},
					{
						"name": "Current Revenue",
						"type": "String"
					},
					{
						"name": "Wtd Current Revenue",
						"type": "String"
					},
					{
						"name": "Target Price",
						"type": "String"
					},
					{
						"name": "CCI2",
						"type": "String"
					},
					{
						"name": "Total CCI%",
						"type": "String"
					},
					{
						"name": "Global Client Account Lead",
						"type": "String"
					},
					{
						"name": "Technology Services Lead",
						"type": "String"
					},
					{
						"name": "Client Account Lead",
						"type": "String"
					},
					{
						"name": "Sales Capture (Primary)",
						"type": "String"
					},
					{
						"name": "Contract Extension Flag",
						"type": "String"
					},
					{
						"name": "Selling Country/Location",
						"type": "String"
					},
					{
						"name": "Geo Unit",
						"type": "String"
					},
					{
						"name": "Primary Work Location",
						"type": "String"
					},
					{
						"name": "Delivery Centers",
						"type": "String"
					},
					{
						"name": "Competitor",
						"type": "String"
					},
					{
						"name": "Winning Competitor",
						"type": "String"
					},
					{
						"name": "Reason",
						"type": "String"
					},
					{
						"name": "Competitive / Sole Source",
						"type": "String"
					},
					{
						"name": "Third Party Advisor",
						"type": "String"
					},
					{
						"name": "Digital",
						"type": "String"
					},
					{
						"name": "Accenture Products & Platforms",
						"type": "String"
					},
					{
						"name": "Alliances",
						"type": "String"
					},
					{
						"name": "Business Service",
						"type": "String"
					},
					{
						"name": "Consulting Practice",
						"type": "String"
					},
					{
						"name": "Cross Service Group Offering",
						"type": "String"
					},
					{
						"name": "Mergers & Acquisitions",
						"type": "String"
					},
					{
						"name": "Strategy Offerings",
						"type": "String"
					},
					{
						"name": "Tech/Operations Offerings",
						"type": "String"
					},
					{
						"name": "Win Category",
						"type": "String"
					},
					{
						"name": " Extension/non-Extension ",
						"type": "String"
					},
					{
						"name": " Deal size ",
						"type": "String"
					},
					{
						"name": " OG Abbrev ",
						"type": "String"
					},
					{
						"name": " Geo-Unit ",
						"type": "String"
					},
					{
						"name": " Country ",
						"type": "String"
					},
					{
						"name": " Master Client Lvl 2 ",
						"type": "String"
					},
					{
						"name": "New",
						"type": "String"
					},
					{
						"name": " New since last week ",
						"type": "String"
					},
					{
						"name": " New this month ",
						"type": "String"
					},
					{
						"name": " Deal Volume ",
						"type": "String"
					},
					{
						"name": "Master Contract",
						"type": "String"
					},
					{
						"name": "Master Contract Name (Global)",
						"type": "String"
					},
					{
						"name": "Valid from",
						"type": "String"
					},
					{
						"name": "Valid to",
						"type": "String"
					},
					{
						"name": "Sales Sept",
						"type": "String"
					},
					{
						"name": "Revenue Sept",
						"type": "String"
					},
					{
						"name": "Contract CI Sept",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "|",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('ds_NEWAMS_Source_Lake_old_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('ds_NEWAMS_Source_Lake_old_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_TEST_Destination_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "fecha",
						"type": "String"
					},
					{
						"name": "identificador",
						"type": "String"
					},
					{
						"name": "nombre",
						"type": "String"
					},
					{
						"name": "valor",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[FINANCE].[STG_T_TEST]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_TEST_Source_Lake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "fecha",
						"type": "String"
					},
					{
						"name": "identificador",
						"type": "String"
					},
					{
						"name": "nombre",
						"type": "String"
					},
					{
						"name": "valor",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ";",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('ds_TEST_Source_Lake_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('ds_TEST_Source_Lake_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_biinsite_Destination_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Data_Load_Date",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_Source",
						"type": "String"
					},
					{
						"name": "Course_Type_ID",
						"type": "String"
					},
					{
						"name": "Course_Type_Description",
						"type": "String"
					},
					{
						"name": "Active_ID",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[PEOPLE_REVIEW].[STG_PR_Dim_Course_Type]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_biinsite_SourceLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "Data_Load_Date",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Data_Source",
						"type": "String"
					},
					{
						"name": "Course_Type_ID",
						"type": "String"
					},
					{
						"name": "Course_Type_Description",
						"type": "String"
					},
					{
						"name": "Active_ID",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ";",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('ds_biinsite_SourceLake_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('ds_biinsite_SourceLake_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://testfunctiondecript2.azurewebsites.net",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction1_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Connecttofunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://gpgdecript.azurewebsites.net",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('Connecttofunction_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OData1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('OData1_properties_typeProperties_url')]",
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/connecttodatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('connecttodatalake_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('connecttodatalake_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('connecttodatalake_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('connecttodatalake_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/connecttosql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('connecttosql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/connecttosql_ams')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('connecttosql_ams_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/containertest/blobs/destino/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeJokoTest')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLiveInMinutes": 60
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_NEWAMS_Source_Lake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttodatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDataLakeStoreFile",
				"structure": [
					{
						"name": "Opportunity_ID",
						"type": "String"
					},
					{
						"name": "Reporting_Status",
						"type": "String"
					},
					{
						"name": "OG",
						"type": "String"
					},
					{
						"name": "OU",
						"type": "String"
					},
					{
						"name": "CSG",
						"type": "String"
					},
					{
						"name": "Sub_CSG",
						"type": "String"
					},
					{
						"name": "Master_Client_Name",
						"type": "String"
					},
					{
						"name": "Master_Client_Class",
						"type": "String"
					},
					{
						"name": "Financial_Customer_Name",
						"type": "String"
					},
					{
						"name": "CR_Name",
						"type": "String"
					},
					{
						"name": "Opportunity_Name",
						"type": "String"
					},
					{
						"name": "Industry_Segment",
						"type": "String"
					},
					{
						"name": "Industry_Sub_Segment",
						"type": "String"
					},
					{
						"name": "Opportunity_Class",
						"type": "String"
					},
					{
						"name": "Stage",
						"type": "String"
					},
					{
						"name": "Restricted",
						"type": "String"
					},
					{
						"name": "Win_Probability",
						"type": "String"
					},
					{
						"name": "Total_Current_Revenue",
						"type": "Decimal"
					},
					{
						"name": "CCI",
						"type": "Decimal"
					},
					{
						"name": "CCI1",
						"type": "String"
					},
					{
						"name": "Target_Margin",
						"type": "String"
					},
					{
						"name": "Create_Date",
						"type": "String"
					},
					{
						"name": "Stage_Update_Date",
						"type": "String"
					},
					{
						"name": "Pipeline_Entry_Date",
						"type": "String"
					},
					{
						"name": "Proposal_Submission_Date",
						"type": "String"
					},
					{
						"name": "Expected_Contract_Signing_Date",
						"type": "String"
					},
					{
						"name": "Status_Since_Date",
						"type": "String"
					},
					{
						"name": "Cons_Start_Date",
						"type": "String"
					},
					{
						"name": "Cons_End_Date",
						"type": "String"
					},
					{
						"name": "OS_Start_Date",
						"type": "String"
					},
					{
						"name": "OS_End_Date",
						"type": "String"
					},
					{
						"name": "ECSD_Quarter",
						"type": "String"
					},
					{
						"name": "RSD_Quarter",
						"type": "String"
					},
					{
						"name": "ToW",
						"type": "String"
					},
					{
						"name": "Business_Dimensions",
						"type": "String"
					},
					{
						"name": "SG",
						"type": "String"
					},
					{
						"name": "Service_Start_Date",
						"type": "String"
					},
					{
						"name": "Service_End_Date",
						"type": "String"
					},
					{
						"name": "SSG",
						"type": "String"
					},
					{
						"name": "Opp_Service_Revenue",
						"type": "Decimal"
					},
					{
						"name": "Current_Revenue",
						"type": "Decimal"
					},
					{
						"name": "Wtd_Current_Revenue",
						"type": "Decimal"
					},
					{
						"name": "Target_Price",
						"type": "Decimal"
					},
					{
						"name": "CCI2",
						"type": "Decimal"
					},
					{
						"name": "Total_CCI",
						"type": "String"
					},
					{
						"name": "Global_Client_Account_Lead",
						"type": "String"
					},
					{
						"name": "Technology_Services_Lead",
						"type": "String"
					},
					{
						"name": "Client_Account_Lead",
						"type": "String"
					},
					{
						"name": "Sales_Capture_Primary",
						"type": "String"
					},
					{
						"name": "Contract_Extension_Flag",
						"type": "String"
					},
					{
						"name": "Selling_Country_Location",
						"type": "String"
					},
					{
						"name": "Geo_Unit",
						"type": "String"
					},
					{
						"name": "Primary_Work_Location",
						"type": "String"
					},
					{
						"name": "Delivery_Centers",
						"type": "String"
					},
					{
						"name": "Competitor",
						"type": "String"
					},
					{
						"name": "Winning_Competitor",
						"type": "String"
					},
					{
						"name": "Reason",
						"type": "String"
					},
					{
						"name": "Competitive_Sole_Source",
						"type": "String"
					},
					{
						"name": "Third_Party_Advisor",
						"type": "String"
					},
					{
						"name": "Digital",
						"type": "String"
					},
					{
						"name": "Accenture_Products_Platforms",
						"type": "String"
					},
					{
						"name": "Alliances",
						"type": "String"
					},
					{
						"name": "Business_Service",
						"type": "String"
					},
					{
						"name": "Consulting_Practice",
						"type": "String"
					},
					{
						"name": "Cross_Service_Group_Offering",
						"type": "String"
					},
					{
						"name": "Mergers_Acquisitions",
						"type": "String"
					},
					{
						"name": "Strategy_Offerings",
						"type": "String"
					},
					{
						"name": "Tech_Operations_Offerings",
						"type": "String"
					},
					{
						"name": "Win_Category",
						"type": "String"
					},
					{
						"name": "Extension_non_Extension",
						"type": "String"
					},
					{
						"name": "Deal_size",
						"type": "String"
					},
					{
						"name": "OG_Abbrev",
						"type": "String"
					},
					{
						"name": "Geo_Unit1",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Master_Client_Lvl_2",
						"type": "String"
					},
					{
						"name": "New",
						"type": "String"
					},
					{
						"name": "New_since_last_week",
						"type": "String"
					},
					{
						"name": "New_this_month",
						"type": "String"
					},
					{
						"name": "Deal_Volume",
						"type": "Decimal"
					},
					{
						"name": "Master_Contract",
						"type": "String"
					},
					{
						"name": "Master_Contract_Name_Global",
						"type": "String"
					},
					{
						"name": "Valid_from",
						"type": "String"
					},
					{
						"name": "Valid_to",
						"type": "String"
					},
					{
						"name": "Sales_Sept",
						"type": "Decimal"
					},
					{
						"name": "Revenue_Sept",
						"type": "Decimal"
					},
					{
						"name": "Contract_CI_Sept",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "|",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('ds_NEWAMS_Source_Lake_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('ds_NEWAMS_Source_Lake_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_NEWAMS_Destination_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "connecttosql_ams",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Opportunity_ID",
						"type": "String"
					},
					{
						"name": "Reporting_Status",
						"type": "String"
					},
					{
						"name": "OG",
						"type": "String"
					},
					{
						"name": "OU",
						"type": "String"
					},
					{
						"name": "CSG",
						"type": "String"
					},
					{
						"name": "Sub_CSG",
						"type": "String"
					},
					{
						"name": "Master_Client_Name",
						"type": "String"
					},
					{
						"name": "Master_Client_Class",
						"type": "String"
					},
					{
						"name": "Financial_Customer_Name",
						"type": "String"
					},
					{
						"name": "CR_Name",
						"type": "String"
					},
					{
						"name": "Opportunity_Name",
						"type": "String"
					},
					{
						"name": "Industry_Segment",
						"type": "String"
					},
					{
						"name": "Industry_Sub_Segment",
						"type": "String"
					},
					{
						"name": "Opportunity_Class",
						"type": "String"
					},
					{
						"name": "Stage",
						"type": "String"
					},
					{
						"name": "Restricted",
						"type": "String"
					},
					{
						"name": "Win_Probability",
						"type": "String"
					},
					{
						"name": "Total_Current_Revenue",
						"type": "Decimal"
					},
					{
						"name": "CCI",
						"type": "Decimal"
					},
					{
						"name": "CCI1",
						"type": "String"
					},
					{
						"name": "Target_Margin",
						"type": "String"
					},
					{
						"name": "Create_Date",
						"type": "String"
					},
					{
						"name": "Stage_Update_Date",
						"type": "String"
					},
					{
						"name": "Pipeline_Entry_Date",
						"type": "String"
					},
					{
						"name": "Proposal_Submission_Date",
						"type": "String"
					},
					{
						"name": "Expected_Contract_Signing_Date",
						"type": "String"
					},
					{
						"name": "Status_Since_Date",
						"type": "String"
					},
					{
						"name": "Cons_Start_Date",
						"type": "String"
					},
					{
						"name": "Cons_End_Date",
						"type": "String"
					},
					{
						"name": "OS_Start_Date",
						"type": "String"
					},
					{
						"name": "OS_End_Date",
						"type": "String"
					},
					{
						"name": "ECSD_Quarter",
						"type": "String"
					},
					{
						"name": "RSD_Quarter",
						"type": "String"
					},
					{
						"name": "ToW",
						"type": "String"
					},
					{
						"name": "Business_Dimensions",
						"type": "String"
					},
					{
						"name": "SG",
						"type": "String"
					},
					{
						"name": "Service_Start_Date",
						"type": "String"
					},
					{
						"name": "Service_End_Date",
						"type": "String"
					},
					{
						"name": "SSG",
						"type": "String"
					},
					{
						"name": "Opp_Service_Revenue",
						"type": "Decimal"
					},
					{
						"name": "Current_Revenue",
						"type": "Decimal"
					},
					{
						"name": "Wtd_Current_Revenue",
						"type": "Decimal"
					},
					{
						"name": "Target_Price",
						"type": "Decimal"
					},
					{
						"name": "CCI2",
						"type": "Decimal"
					},
					{
						"name": "Total_CCI",
						"type": "String"
					},
					{
						"name": "Global_Client_Account_Lead",
						"type": "String"
					},
					{
						"name": "Technology_Services_Lead",
						"type": "String"
					},
					{
						"name": "Client_Account_Lead",
						"type": "String"
					},
					{
						"name": "Sales_Capture_Primary",
						"type": "String"
					},
					{
						"name": "Contract_Extension_Flag",
						"type": "String"
					},
					{
						"name": "Selling_Country_Location",
						"type": "String"
					},
					{
						"name": "Geo_Unit",
						"type": "String"
					},
					{
						"name": "Primary_Work_Location",
						"type": "String"
					},
					{
						"name": "Delivery_Centers",
						"type": "String"
					},
					{
						"name": "Competitor",
						"type": "String"
					},
					{
						"name": "Winning_Competitor",
						"type": "String"
					},
					{
						"name": "Reason",
						"type": "String"
					},
					{
						"name": "Competitive_Sole_Source",
						"type": "String"
					},
					{
						"name": "Third_Party_Advisor",
						"type": "String"
					},
					{
						"name": "Digital",
						"type": "String"
					},
					{
						"name": "Accenture_Products_Platforms",
						"type": "String"
					},
					{
						"name": "Alliances",
						"type": "String"
					},
					{
						"name": "Business_Service",
						"type": "String"
					},
					{
						"name": "Consulting_Practice",
						"type": "String"
					},
					{
						"name": "Cross_Service_Group_Offering",
						"type": "String"
					},
					{
						"name": "Mergers_Acquisitions",
						"type": "String"
					},
					{
						"name": "Strategy_Offerings",
						"type": "String"
					},
					{
						"name": "Tech_Operations_Offerings",
						"type": "String"
					},
					{
						"name": "Win_Category",
						"type": "String"
					},
					{
						"name": "Extension_non_Extension",
						"type": "String"
					},
					{
						"name": "Deal_size",
						"type": "String"
					},
					{
						"name": "OG_Abbrev",
						"type": "String"
					},
					{
						"name": "Geo_Unit1",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Master_Client_Lvl_2",
						"type": "String"
					},
					{
						"name": "New",
						"type": "String"
					},
					{
						"name": "New_since_last_week",
						"type": "String"
					},
					{
						"name": "New_this_month",
						"type": "String"
					},
					{
						"name": "Deal_Volume",
						"type": "Decimal"
					},
					{
						"name": "Master_Contract",
						"type": "String"
					},
					{
						"name": "Master_Contract_Name_Global",
						"type": "String"
					},
					{
						"name": "Valid_from",
						"type": "String"
					},
					{
						"name": "Valid_to",
						"type": "String"
					},
					{
						"name": "Sales_Sept",
						"type": "Decimal"
					},
					{
						"name": "Revenue_Sept",
						"type": "Decimal"
					},
					{
						"name": "Contract_CI_Sept",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[STG_T_NEWAMS]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql_ams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_NEWAMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Inicio NEWAMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Inicio Pipeline",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "100",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql_ams",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Fin KO NEWAMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "File To Failed Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": "Fin Pipeline KO",
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "0",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql_ams",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get NameFile NEWAMS",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Log Inicio NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DataLake_ListFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "Log Fin OK NEWAMS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
							"storedProcedureParameters": {
								"AMBIT": {
									"value": {
										"value": "@pipeline().parameters.pLog_AMBIT",
										"type": "Expression"
									},
									"type": "String"
								},
								"ENTRY": {
									"value": {
										"value": "@variables('vLog_ENTRY')",
										"type": "Expression"
									},
									"type": "String"
								},
								"OUT": {
									"value": {
										"value": "@variables('vLog_OUT')",
										"type": "Expression"
									},
									"type": "String"
								},
								"PROCNAME": {
									"value": {
										"value": "@variables('vLog_PROCNAME')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_DS": {
									"value": {
										"value": "@concat('Fin Pipeline OK',if(variables('vEjecucionConErores'),': Finalizado con errores',''))",
										"type": "Expression"
									},
									"type": "String"
								},
								"RESULT_OK_KO": {
									"value": "1",
									"type": "Int32"
								},
								"STEP": {
									"value": "110",
									"type": "Int32"
								},
								"ID_PIPELINE": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "connecttosql_ams",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach NEWAMS",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter NEWAMS').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Check FileName Already NEWAMS",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set FileName NEWAMS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderStoredProcedureName": "[[ITC_PIPELINE_FILE_LOG_INSERT]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@variables('vFileNameCurrent')",
														"type": "Expression"
													}
												},
												"Proc": {
													"type": "String",
													"value": {
														"value": "@variables('vLog_PROCNAME')",
														"type": "Expression"
													}
												},
												"ID_PIPELINE": {
													"type": "String",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											}
										},
										"dataset": {
											"referenceName": "SQLCheck_FileName",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set FileName NEWAMS",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vFileNameCurrent",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_File_ToSQL NEWAMS",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Check FileName Already NEWAMS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Check FileName Already NEWAMS').output.firstRow.Result",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "LOG File Alredy Processed NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Move File To Processed File Alredy Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fichero ya procesado: ', variables('vFileNameCurrent'),', Se mueve a la carpeta Processed')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "300",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Move File To Processed File Alredy Processed",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy To SQL NEWAMS",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Log Inicio Copia NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDataLakeStoreSource",
														"recursive": true
													},
													"sink": {
														"type": "SqlSink",
														"writeBatchSize": 10000,
														"preCopyScript": "TRUNCATE TABLE [STG_T_NEWAMS]",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"dataIntegrationUnits": 0,
													"translator": {
														"type": "TabularTranslator",
														"columnMappings": {
															"Opportunity_ID": "Opportunity_ID",
															"Reporting_Status": "Reporting_Status",
															"OG": "OG",
															"OU": "OU",
															"CSG": "CSG",
															"Sub_CSG": "Sub_CSG",
															"Master_Client_Name": "Master_Client_Name",
															"Master_Client_Class": "Master_Client_Class",
															"Financial_Customer_Name": "Financial_Customer_Name",
															"CR_Name": "CR_Name",
															"Opportunity_Name": "Opportunity_Name",
															"Industry_Segment": "Industry_Segment",
															"Industry_Sub_Segment": "Industry_Sub_Segment",
															"Opportunity_Class": "Opportunity_Class",
															"Stage": "Stage",
															"Restricted": "Restricted",
															"Win_Probability": "Win_Probability",
															"Total_Current_Revenue": "Total_Current_Revenue",
															"CCI": "CCI",
															"CCI1": "CCI1",
															"Target_Margin": "Target_Margin",
															"Create_Date": "Create_Date",
															"Stage_Update_Date": "Stage_Update_Date",
															"Pipeline_Entry_Date": "Pipeline_Entry_Date",
															"Proposal_Submission_Date": "Proposal_Submission_Date",
															"Expected_Contract_Signing_Date": "Expected_Contract_Signing_Date",
															"Status_Since_Date": "Status_Since_Date",
															"Cons_Start_Date": "Cons_Start_Date",
															"Cons_End_Date": "Cons_End_Date",
															"OS_Start_Date": "OS_Start_Date",
															"OS_End_Date": "OS_End_Date",
															"ECSD_Quarter": "ECSD_Quarter",
															"RSD_Quarter": "RSD_Quarter",
															"ToW": "ToW",
															"Business_Dimensions": "Business_Dimensions",
															"SG": "SG",
															"Service_Start_Date": "Service_Start_Date",
															"Service_End_Date": "Service_End_Date",
															"SSG": "SSG",
															"Opp_Service_Revenue": "Opp_Service_Revenue",
															"Current_Revenue": "Current_Revenue",
															"Wtd_Current_Revenue": "Wtd_Current_Revenue",
															"Target_Price": "Target_Price",
															"CCI2": "CCI2",
															"Total_CCI": "Total_CCI",
															"Global_Client_Account_Lead": "Global_Client_Account_Lead",
															"Technology_Services_Lead": "Technology_Services_Lead",
															"Client_Account_Lead": "Client_Account_Lead",
															"Sales_Capture_Primary": "Sales_Capture_Primary",
															"Contract_Extension_Flag": "Contract_Extension_Flag",
															"Selling_Country_Location": "Selling_Country_Location",
															"Geo_Unit": "Geo_Unit",
															"Primary_Work_Location": "Primary_Work_Location",
															"Delivery_Centers": "Delivery_Centers",
															"Competitor": "Competitor",
															"Winning_Competitor": "Winning_Competitor",
															"Reason": "Reason",
															"Competitive_Sole_Source": "Competitive_Sole_Source",
															"Third_Party_Advisor": "Third_Party_Advisor",
															"Digital": "Digital",
															"Accenture_Products_Platforms": "Accenture_Products_Platforms",
															"Alliances": "Alliances",
															"Business_Service": "Business_Service",
															"Consulting_Practice": "Consulting_Practice",
															"Cross_Service_Group_Offering": "Cross_Service_Group_Offering",
															"Mergers_Acquisitions": "Mergers_Acquisitions",
															"Strategy_Offerings": "Strategy_Offerings",
															"Tech_Operations_Offerings": "Tech_Operations_Offerings",
															"Win_Category": "Win_Category",
															"Extension_non_Extension": "Extension_non_Extension",
															"Deal_size": "Deal_size",
															"OG_Abbrev": "OG_Abbrev",
															"Geo_Unit1": "Geo_Unit1",
															"Country": "Country",
															"Master_Client_Lvl_2": "Master_Client_Lvl_2",
															"New": "New",
															"New_since_last_week": "New_since_last_week",
															"New_this_month": "New_this_month",
															"Deal_Volume": "Deal_Volume",
															"Master_Contract": "Master_Contract",
															"Master_Contract_Name_Global": "Master_Contract_Name_Global",
															"Valid_from": "Valid_from",
															"Valid_to": "Valid_to",
															"Sales_Sept": "Sales_Sept",
															"Revenue_Sept": "Revenue_Sept",
															"Contract_CI_Sept": "Contract_CI_Sept"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_NEWAMS_Source_Lake",
														"type": "DatasetReference",
														"parameters": {
															"FileName": {
																"value": "@variables('vFileNameCurrent')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_NEWAMS_Destination_SQL",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Log OK NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "File To Processed",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia OK: ',string(activity('Copy To SQL NEWAMS').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log KO NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Set EjecucionConErrores NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": {
																"value": "@concat('Fin del proceso de copia ERROR: ',string(activity('Copy To SQL NEWAMS').output))",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "0",
															"type": "Int32"
														},
														"STEP": {
															"value": "220",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Log Inicio Copia NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[ITC_PIPELINECONTROL_INSERT]",
													"storedProcedureParameters": {
														"AMBIT": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														},
														"ENTRY": {
															"value": {
																"value": "@variables('vLog_ENTRY')",
																"type": "Expression"
															},
															"type": "String"
														},
														"OUT": {
															"value": {
																"value": "@variables('vLog_OUT')",
																"type": "Expression"
															},
															"type": "String"
														},
														"PROCNAME": {
															"value": {
																"value": "@variables('vLog_PROCNAME')",
																"type": "Expression"
															},
															"type": "String"
														},
														"RESULT_DS": {
															"value": "Inicio proceso de copia",
															"type": "String"
														},
														"RESULT_OK_KO": {
															"value": "1",
															"type": "Int32"
														},
														"STEP": {
															"value": "200",
															"type": "Int32"
														},
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "PL_FEED__NEWAMS",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy To SQL NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[PL_FEED_NEWAMS]",
													"storedProcedureParameters": {
														"ID_PIPELINE": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"AMBITO": {
															"value": {
																"value": "@pipeline().parameters.pLog_AMBIT",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "connecttosql_ams",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "File To Processed",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "PL_FEED__NEWAMS",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "Processed",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "File To FailedLoad",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Copy To SQL NEWAMS",
														"dependencyConditions": [
															"Failed"
														]
													},
													{
														"activity": "PL_FEED__NEWAMS",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_MoveFile",
														"type": "PipelineReference"
													},
													"parameters": {
														"sFolderOrig": "FromsFTP",
														"sFileNameOrig": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														},
														"sFolderDest": "FailedLoad",
														"sFileNameDest": {
															"value": "@variables('vFileNameCurrent')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Set EjecucionConErrores NEWAMS",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "File To FailedLoad",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "vEjecucionConErores",
													"value": true
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Filter NEWAMS",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get NameFile NEWAMS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get NameFile NEWAMS').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(  greaterOrEquals(indexof(item().name,'AMS'),0),  endswith(item().name,'.csv') )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "File To Failed Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach NEWAMS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_MoveFile",
								"type": "PipelineReference"
							},
							"parameters": {
								"sFolderOrig": {
									"value": "@concat('FromsFTP')",
									"type": "Expression"
								},
								"sFileNameOrig": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								},
								"sFolderDest": {
									"value": "@concat('FailedLoad')",
									"type": "Expression"
								},
								"sFileNameDest": {
									"value": "@variables('vFileNameCurrent')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"pLog_AMBIT": {
						"type": "String",
						"defaultValue": "AMS"
					}
				},
				"variables": {
					"vLog_PROCNAME": {
						"type": "String",
						"defaultValue": "pl_NEWAMS"
					},
					"vLog_ENTRY": {
						"type": "String",
						"defaultValue": "File_NEWAMS"
					},
					"vLog_OUT": {
						"type": "String",
						"defaultValue": "[[STG_T_NEWAMS]"
					},
					"vFileNameCurrent": {
						"type": "String"
					},
					"vEjecucionConErores": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/connecttosql_ams')]",
				"[concat(variables('factoryId'), '/datasets/DataLake_ListFiles')]",
				"[concat(variables('factoryId'), '/pipelines/pl_MoveFile')]",
				"[concat(variables('factoryId'), '/datasets/SQLCheck_FileName')]",
				"[concat(variables('factoryId'), '/datasets/ds_NEWAMS_Source_Lake')]",
				"[concat(variables('factoryId'), '/datasets/ds_NEWAMS_Destination_SQL')]"
			]
		}
	]
}